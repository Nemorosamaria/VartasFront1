@model VartasBackend1.Models.Tuote

@{
    ViewBag.Title = "Edit";
}

<h2>Edit product</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TuoteId)
        <!-- Name  -->
        <div class="row">
            <div class="large-4 medium-4 columns">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="large-4 medium-4 columns">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="large-4 medium-4 columns">
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <!-- Product Key  -->
        <div class="row">
            <div class="large-4 medium-4 columns">
                @Html.LabelFor(model => model.ProductKey, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="large-4 medium-4 columns">
                @Html.EditorFor(model => model.ProductKey, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="large-4 medium-4 columns">
                @Html.ValidationMessageFor(model => model.ProductKey, "", new { @class = "text-danger" })
            </div>
        </div>
        <!-- Manufacturer  -->
        <div class="row">
            <div class="large-4 medium-4 columns">
                @Html.LabelFor(model => model.Manufacturer, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="large-4 medium-4 columns">
                @Html.EditorFor(model => model.Manufacturer, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="large-4 medium-4 columns">
                @Html.ValidationMessageFor(model => model.Manufacturer, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Category  -->
        <div class="row">
            <div class="large-4 medium-4 columns">
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="large-4 medium-4 columns">
                @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="large-4 medium-4 columns">
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Price  -->
        <div class="row">
            <div class="large-4 medium-4 columns">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="large-4 medium-4 columns">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="large-4 medium-4 columns">
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- IsStorageProduct  -->
        <div class="row">
            <div class="large-4 medium-4 columns">
                @Html.LabelFor(model => model.IsStorageProduct, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="large-4 medium-4 columns">
                @Html.EditorFor(model => model.IsStorageProduct, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="large-4 medium-4 columns">
                @Html.ValidationMessageFor(model => model.IsStorageProduct, "", new { @class = "text-danger" })
            </div>
        </div>
       
        <!-- IsPrSaldoPositive  -->
        <div class="row">
            <div class="large-4 medium-4 columns">
                @Html.LabelFor(model => model.IsPrSaldoPositive, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="large-4 medium-4 columns">
                @Html.EditorFor(model => model.IsPrSaldoPositive, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="large-4 medium-4 columns">
                @Html.ValidationMessageFor(model => model.IsPrSaldoPositive, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Saldo  -->
        <div class="row">
            <div class="large-4 medium-4 columns">
                @Html.LabelFor(model => model.Saldo, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="large-4 medium-4 columns">
                @Html.EditorFor(model => model.Saldo, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="large-4 medium-4 columns">
                @Html.ValidationMessageFor(model => model.Saldo, "", new { @class = "text-danger" })
            </div>
        </div>
       
        <!-- Description  -->
        <div class="row">
            <div class="large-4 medium-4 columns">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="large-4 medium-4 columns">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="large-4 medium-4 columns">
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Edited  -->
        <div class="row">
            <div class="large-4 medium-4 columns">
                @Html.LabelFor(model => model.Edited, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="large-4 medium-4 columns">
                @Html.EditorFor(model => model.Edited, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="large-4 medium-4 columns">
                @Html.ValidationMessageFor(model => model.Edited, "", new { @class = "text-danger" })
            </div>
        </div>
       
        <!-- Editor  -->
        <div class="row">
            <div class="large-4 medium-4 columns">
                @Html.LabelFor(model => model.Editor, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="large-4 medium-4 columns">
                @Html.EditorFor(model => model.Editor, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="large-4 medium-4 columns">
                @Html.ValidationMessageFor(model => model.Editor, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- buttons -->
        <div class="row">
            <div class="large-12 medium-12 columns">
                <div class="button-group">
                    <button type="submit" class="button">Save</button>
                </div>
            </div>
        </div>

    </div>
}
<div class="large-12 columns">
        @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
